name: Build and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write
  actions: write
  id-token: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller packaging

    - name: Generate version number
      id: version
      run: |
        $version = "1.0.${{ github.run_number }}"
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo $version | Out-File -FilePath VERSION -Encoding utf8 -NoNewline
        echo "Generated version: $version"
      shell: powershell

    - name: Update version in version_info.txt
      run: |
        $version = "1.0.${{ github.run_number }}"
        $versionParts = $version.Split('.')
        $content = Get-Content "build_tools/version_info.txt" -Raw
        $content = $content -replace "filevers=\(1, 0, \d+, 0\)", "filevers=($($versionParts[0]), $($versionParts[1]), $($versionParts[2]), 0)"
        $content = $content -replace "prodvers=\(1, 0, \d+, 0\)", "prodvers=($($versionParts[0]), $($versionParts[1]), $($versionParts[2]), 0)"
        $content = $content -replace "u'FileVersion', u'1\.0\.\d+\.0'", "u'FileVersion', u'$version.0'"
        $content = $content -replace "u'ProductVersion', u'1\.0\.\d+\.0'", "u'ProductVersion', u'$version.0'"
        Set-Content "build_tools/version_info.txt" -Value $content
      shell: powershell

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --clean --noconfirm build_tools/Matriculas_Confrontantes_PGE_MS.spec

    - name: Verify build output
      run: |
        # PyInstaller gera na raiz quando chamado da raiz
        if (Test-Path "dist\Matriculas_Confrontantes_PGE_MS.exe") {
          Write-Host "Build successful - executable found in dist/"
          $size = (Get-Item "dist\Matriculas_Confrontantes_PGE_MS.exe").length
          Write-Host "Executable size: $([math]::Round($size/1MB,2)) MB"

          # Renomeia para nome final
          Copy-Item "dist\Matriculas_Confrontantes_PGE_MS.exe" "dist\analisador_matriculas.exe"
        } elseif (Test-Path "build_tools\dist\Matriculas_Confrontantes_PGE_MS.exe") {
          Write-Host "Build successful - executable found in build_tools/dist/"
          $size = (Get-Item "build_tools\dist\Matriculas_Confrontantes_PGE_MS.exe").length
          Write-Host "Executable size: $([math]::Round($size/1MB,2)) MB"

          # Copy to dist folder for upload
          New-Item -ItemType Directory -Force -Path dist
          Copy-Item "build_tools\dist\Matriculas_Confrontantes_PGE_MS.exe" "dist\analisador_matriculas.exe"
        } else {
          Write-Host "Build failed - executable not found in either location"
          Write-Host "Checking current directory structure:"
          Get-ChildItem -Recurse -Filter "*.exe" | Select-Object FullName
          exit 1
        }
      shell: powershell

    - name: Copy VERSION file to dist
      run: |
        Copy-Item VERSION dist\
      shell: powershell

    - name: Create release on push to main/master
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## Vers√£o v${{ steps.version.outputs.VERSION }}

          ### Atualiza√ß√µes Autom√°ticas
          ‚úÖ Build autom√°tico #${{ github.run_number }}
          üîÑ Sistema de auto-atualiza√ß√£o ativo
          üì¶ Execut√°vel gerado automaticamente

          ### Como Usar
          1. Baixe o arquivo `analisador_matriculas.exe`
          2. Execute o arquivo baixado
          3. O sistema verificar√° automaticamente por atualiza√ß√µes

          ### Notas T√©cnicas
          - Gerado automaticamente via GitHub Actions
          - Commit: ${{ github.sha }}
          - Branch: ${{ github.ref_name }}
          - Timestamp: ${{ github.event.head_commit.timestamp }}

          ---
          ü§ñ Release gerada automaticamente pelo GitHub Actions
        draft: false
        prerelease: false
        files: |
          dist/analisador_matriculas.exe
          VERSION
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-v${{ steps.version.outputs.VERSION }}
        path: |
          dist/analisador_matriculas.exe
          VERSION
        retention-days: 30